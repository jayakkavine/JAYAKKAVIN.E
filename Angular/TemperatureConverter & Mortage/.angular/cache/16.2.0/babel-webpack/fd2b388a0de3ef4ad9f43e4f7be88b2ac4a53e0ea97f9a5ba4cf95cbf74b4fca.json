{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TemperatureConverterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Converted Temperature: \", i0.ɵɵpipeBind1(3, 2, ctx_r0.convertedTemperature), \" \", ctx_r0.selectedUnit, \"\");\n  }\n}\nexport class TemperatureConverterComponent {\n  constructor() {\n    this.selectedUnit = 'Celsius';\n    this.convertedTemperature = null;\n  }\n  convertTemperature() {\n    if (this.selectedUnit === 'Celsius') {\n      this.convertedTemperature = (this.inputTemperature - 32) * 5 / 9;\n    } else {\n      this.convertedTemperature = this.inputTemperature * 9 / 5 + 32;\n    }\n  }\n}\n_class = TemperatureConverterComponent;\n_class.ɵfac = function TemperatureConverterComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-temperature-converter\"]],\n  decls: 22,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\", \"d-flex\", \"justify-content-center\"], [1, \"border\", \"rounded\", \"p-4\", \"bg-light\", \"shadow-sm\", 2, \"max-width\", \"400px\", \"border\", \"2px solid #3498db\"], [1, \"text-center\", \"mb-4\", 2, \"color\", \"#3498db\"], [1, \"mb-3\"], [\"for\", \"temperatureInput\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"temperatureInput\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check-label\"], [1, \"form-check\"], [\"type\", \"radio\", \"id\", \"celsiusRadio\", \"value\", \"Celsius\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"celsiusRadio\", 1, \"form-check-label\"], [\"type\", \"radio\", \"id\", \"fahrenheitRadio\", \"value\", \"Fahrenheit\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"fahrenheitRadio\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", \"d-block\", \"mx-auto\", 2, \"background-color\", \"#3498db\", \"border-color\", \"#3498db\", 3, \"click\"], [\"class\", \"mt-3 text-center\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"]],\n  template: function TemperatureConverterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Temperature Converter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Input Temperature:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function TemperatureConverterComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.inputTemperature = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Choose Unit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TemperatureConverterComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.selectedUnit = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Celsius\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function TemperatureConverterComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.selectedUnit = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Fahrenheit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function TemperatureConverterComponent_Template_button_click_19_listener() {\n        return ctx.convertTemperature();\n      });\n      i0.ɵɵtext(20, \"Convert\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, TemperatureConverterComponent_div_21_Template, 4, 4, \"div\", 13);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputTemperature);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedUnit);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedUnit);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.convertedTemperature !== null);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgModel, i1.DecimalPipe],\n  styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n   \\n\\n\\n\\n  \\n\\n.p-4[_ngcontent-%COMP%] {\\n    margin: 0;\\n  }\\n  \\n  \\n\\n  .btn-primary[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 0 auto;\\n  }\\n  .modal-backdrop.show[_ngcontent-%COMP%] {\\n    opacity: 0.5;\\n  }\\n  \\n  .modal[_ngcontent-%COMP%] {\\n    background: rgba(0, 0, 0, 0.5);\\n  }\\n  \\n  .modal-dialog[_ngcontent-%COMP%] {\\n    margin-top: 10vh;\\n  }\\n  \\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVtcGVyYXR1cmUtY29udmVydGVyL3RlbXBlcmF0dXJlLWNvbnZlcnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0lBYUk7R0FDRDs7S0FFRTtFQUNILHNDQUFzQztBQUN4QztJQUNJLFNBQVM7RUFDWDs7RUFFQSxzQkFBc0I7RUFDdEI7SUFDRSxjQUFjO0lBQ2QsY0FBYztFQUNoQjtFQUNBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0UsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmNvbnZlcnRlci1jb250YWluZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmlucHV0LWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAucmVzdWx0IHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgICovXHJcbiAgIC8qIC5hbGVydCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9ICovXHJcbiAgLyogQWRqdXN0IHRoZSBzcGFjZSBiZXR3ZWVuIGVsZW1lbnRzICovXHJcbi5wLTQge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICBcclxuICAvKiBDZW50ZXIgdGhlIGJ1dHRvbiAqL1xyXG4gIC5idG4tcHJpbWFyeSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuICAubW9kYWwtYmFja2Ryb3Auc2hvdyB7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgfVxyXG4gIFxyXG4gIC5tb2RhbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgfVxyXG4gIFxyXG4gIC5tb2RhbC1kaWFsb2cge1xyXG4gICAgbWFyZ2luLXRvcDogMTB2aDtcclxuICB9XHJcbiAgXHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ɵɵpipeBind1","ctx_r0","convertedTemperature","selectedUnit","TemperatureConverterComponent","constructor","convertTemperature","inputTemperature","selectors","decls","vars","consts","template","TemperatureConverterComponent_Template","rf","ctx","ɵɵlistener","TemperatureConverterComponent_Template_input_ngModelChange_7_listener","$event","TemperatureConverterComponent_Template_input_ngModelChange_12_listener","TemperatureConverterComponent_Template_input_ngModelChange_16_listener","TemperatureConverterComponent_Template_button_click_19_listener","ɵɵtemplate","TemperatureConverterComponent_div_21_Template","ɵɵproperty"],"sources":["E:\\JAYAKKAVIN.E-master\\Phase 2\\Angular\\TemperatureConverter & Mortage\\src\\app\\temperature-converter\\temperature-converter.component.ts","E:\\JAYAKKAVIN.E-master\\Phase 2\\Angular\\TemperatureConverter & Mortage\\src\\app\\temperature-converter\\temperature-converter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-temperature-converter',\n  templateUrl: './temperature-converter.component.html',\n  styleUrls: ['./temperature-converter.component.css']\n})\nexport class TemperatureConverterComponent {\n  inputTemperature!: number;\n  selectedUnit: string = 'Celsius';\n  convertedTemperature: number | null = null;\n\n  convertTemperature() {\n    if (this.selectedUnit === 'Celsius') {\n      this.convertedTemperature = (this.inputTemperature - 32) * 5 / 9;\n    } else {\n      this.convertedTemperature = (this.inputTemperature * 9 / 5) + 32;\n    }\n  }\n}\n","<div class=\"container mt-5 d-flex justify-content-center\">\n    <div class=\"border rounded p-4 bg-light shadow-sm\" style=\"max-width: 400px; border: 2px solid #3498db;\">\n      <h2 class=\"text-center mb-4\" style=\"color: #3498db;\">Temperature Converter</h2>\n      <div class=\"mb-3\">\n        <label for=\"temperatureInput\" class=\"form-label\">Input Temperature:</label>\n        <input type=\"number\" class=\"form-control\" id=\"temperatureInput\" [(ngModel)]=\"inputTemperature\">\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-check-label\">Choose Unit:</label>\n        <div class=\"form-check\">\n          <input type=\"radio\" class=\"form-check-input\" id=\"celsiusRadio\" [(ngModel)]=\"selectedUnit\" value=\"Celsius\">\n          <label class=\"form-check-label\" for=\"celsiusRadio\">Celsius</label>\n        </div>\n        <div class=\"form-check\">\n          <input type=\"radio\" class=\"form-check-input\" id=\"fahrenheitRadio\" [(ngModel)]=\"selectedUnit\" value=\"Fahrenheit\">\n          <label class=\"form-check-label\" for=\"fahrenheitRadio\">Fahrenheit</label>\n        </div>\n      </div>\n      <button class=\"btn btn-primary d-block mx-auto\" (click)=\"convertTemperature()\" style=\"background-color: #3498db; border-color: #3498db;\">Convert</button>\n      <div *ngIf=\"convertedTemperature !== null\" class=\"mt-3 text-center\">\n        <p>Converted Temperature: {{ convertedTemperature | number }} {{ selectedUnit }}</p>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}